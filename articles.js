this.article01 = [
  '<div id="content">',
  '<h1>Setting up node.js and CouchDB on Webfaction</h1>',
  '<p class="first">',
    'As with any new technology (and at time of writing, node.js is still relatively new) the biggest hurdle is host support. node.js is not a standard option on many hosts and so far, I\'ve identified three main hosts that are making it possible to use node out in the wild. ',
    'Those are <a href="http://joyent.com">Joyent</a>, who are really getting behind the node project, <a href="http://blog.heroku.com/archives/2010/9/20/an_update_on_heroku_node_js_support/">Heroku</a> and my personal choice, <a href="http://www.webfaction.com?affiliate=dstevens84">Webfaction</a>.',
  '</p>',
  '<h2>Prerequisites</h2>',
  '<p>',
    'There are a few things you\'ll need.',
    '<ul>',
      '<li><span>Webfaction Hosting Plan</span> Don\'t have one? <a class="inline" href=" http://www.webfaction.com?affiliate=dstevens84">Sign up here</a>.', 
      '<li><span>Git</span> You will need Git to be installed on your webfaction account. For extra awesome later, install it on your local machine too if you haven\'t already.</li>',
      '<li><span>A basic familiarity with terminal / the command line</span>, or a desire to learn.</li>',
      '<li><span>SSH access</span> You will need SSH access to achieve these tasks.</li>',
    '</ul>',
  '</p>',
  '<h2>Getting Git</h2>',
  '<p>',
    'Git is a version control system that quite simply kicks ass. It\'s amazing. So, if you\'re not already using it, start now and you\'ll soon see what all the fuss is about.',
    'Explaining the ins and outs of Git is far beyond the scope of this article, so I\'ll let you discover that elsewhere - <a href="http://git-scm.com/">you can get started reading about it here</a>.',
  '</p>',
  '<p>',
    'Git is ever evolving software and so you can find out the latest version of git from <a href="http://git-scm.com/">here</a> and replace 1.7.3 in the example below with the latest version number.',
    'To get Git set up on your webfaction account, SSH in as you would normally and on the command line, enter ',
    '<code>mkdir src</code>',
    'This will give you a place to store any source code you download for awesome things like Git and CouchDB.',
    '<code>wget http://www.kernel.org/pub/software/scm/git/git-1.7.3.tar.gz</code>',
    'and hit return. Once the download completes, type ',
    '<code>tar -xzf git-1.7.3.tar.gz</code>',
    'Next, cd in to the newly created git directory: ',
    '<code>cd git-1.7.3</code>',
    'and now we\'ll compile from source to get things up and running:',
    '<code>./configure --prefix=$HOME\nmake\nmake install</code>',
    'Celebrate! You now have Git installed on your account.',
  '</p>',
  '<h2>node Means node</h2>',
  '<p>',
    'So now we\'re ready to go get some of that node goodness. The best part is, now you\'ve got Git this is going to be real easy. First, let\'s make a directory for it in our src directory:',
    '<code>cd ~/src\nmkdir node\ncd node</code>',
    'Next, we\'ll clone the node Git repository: ',
    '<code>git clone git://github.com/ry/node.git</code>',
    'Let Git do it\'s thing, then we\'ll compile it from source: ',
    '<code>cd node\n./configure --jobs=1 --prefix=$HOME\nmake\nmake install</code>',
    'Hooray! We have node. Or at least we should - to verify it, type',
    '<code>node -v</code>',    
  '</p>',
  '<p>',
    'Assuming everything went to plan, you should see some indication of a version number. This is 0.3.1-pre at time of writing, but given the fast pace of development, don\'t be concerned if it\'s something else.',
    'The beauty of using Git to get a hold of node is that you will get the most up to date, cutting edge version of node when you do this. The upgrade process will also be stress-free - but that\'s something for a future article.',
  '</p>',
  '<h2>Time to relax, surely?</h2>',
  '<p>',
    'So now you\'re up and running with node, you\'ll want to have somewhere to store your data. You can of course use MySQL or another relational database - node has you covered in terms of supporting those (see: <a href="">node-mysql</a> or the list of <a href="https://github.com/ry/node/wiki/modules">available node modules</a>) but seeing as how we\'re being all adventurous, why not go the whole hog and try CouchDB to store data?',
  '</p>',
  '<p>',
    'Again, explaining what CouchDB is and what it does is beyond the scope of this article, so I\'ll defer to <a href=""></a> and <a href="http://en.wikipedia.org/wiki/CouchDB">Wikipedia</a> for the curious to learn more. What I <em>will</em> do, however, is show you how to install and set it up on Webfaction.',
  '</p>',  
  '<p>',
    'First thing we\'ll want to do is get CouchDB installed. CouchDB has a few dependencies, like Erlang and Spidermonkey, so let\'s get those installed first, beginning with Erlang:',
    '<code>cd ~/src\nwget http://erlang.org/download/otp_src_R13B02-1.tar.gz\ntar zxf otp_src_R13B02-1.tar.gz\ncd otp_src_R13B02-1\n./configure --prefix=$HOME\nmake\nmake install</code>',
    '...and now ICU',
    '<code>cd ~/src\nwget http://download.icu-project.org/files/icu4c/4.2.1/icu4c-4_2_1-src.tgz\ntar zxf icu4c-4_2_1-src.tgz\ncd icu/source\n./configure --prefix=$HOME\nmake\nmake install</code>',
    'The last dependency we have to install is Spidermonkey and this is crucial so be sure to follow each step!',
    '<code>cd ~/src\nwget http://ftp.mozilla.org/pub/mozilla.org/js/js-1.8.0-rc1.tar.gz\ntar zxf js-1.8.0-rc1.tar.gz\ncd js/src\nmake BUILD_OPT=1 -f Makefile.ref\nmkdir -p $HOME/include/smjs\ncp *.{h,tbl} $HOME/include/smjs/\ncd Linux_All_OPT.OBJ\ncp *.h $HOME/include/smjs/\ncp js $HOME/bin/\ncp libjs.so $HOME/lib/</code>',
    'And now to our featured presentation... couchDB',
    '<code>cd ~src\nmkdir couchdb\ncd couchdb</code>',
    'Next, let\'s grab the CouchDB source from Github:',
    '<code>git clone git://github.com/apache/couchdb.git</code>',
    'And now to compile...',
    '<code>export LD_INCLUDE_PATH=$HOME/include/smjs:$HOME/include/layout:$HOME/include/unicode:$LD_INCLUDE_PATH\nexport LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH\n./configure --prefix=$HOME --with-js-lib=$HOME/lib/ --with-js-include=$HOME/include/smjs --with-erlang=$HOME/lib/erlang/usr/include/\nmake\nmake install</code>',
    'And there we have it, CouchDB is installed! Let\'s make sure we\'re not celebrating too early by checking it\'s working. Type:',
    '<code>couchdb</code>',
    'And you should see a message which includes:',
    '<code>Apache CouchDB has started. Time to relax.</code>',
    'Hooray!',
  '</p>',    
  '<h2>Control Panel</h2>',
  '<p>',
    'Now we need to make sure that we can make use of these fine pieces of software, so we need to give them ports. Webfaction makes this a cinch, by way of the following steps.',
  '</p>',
  '<ol>',
    '<li>Log in to <a href="http://panel.webfaction.com">your control panel at Webfaction</a> and click on <em>Domains / websites</em> from the top navigation menu, then select <em>Applications</em></li>',
    '<li>In the bottom right corner of the list of Apps, click the paper icon with the green + sign to add a new Application</li>',
    '<li>Give the app a name, something you will be able to recognize later. First let\'s set up node, so I\'ll call this <em>davenode</em></li>',
    '<li>Under <em>App category</em> choose Custom</li>',
    '<li>Under <em>App type</em> choose <em>Custom app (listening on port)</em></li>',
    '<li>Hit <em>Create</em></li>',
    '<li>You will see <em>The item has been created</em> in green and a summary of information. Look for <em>Port</em> and write down the number next to it, along with which application this is for.</li>',
    '<li>Repeat steps 2 - 7 once more, for the CouchDB app, again noting down the port number.</li>',
  '</ol>',
  '<p>',
    'Now we just need to hook things up to get us up and running! Whenever you set up a web server or similar with node, you specify a port for it to listen on. Can you guess what we\'re going to specify this port as?',
  '</p>',
  '<p>',
    'Let\'s take the simple web server example from the <a href="http://nodejs.org">node homepage</a> and update the port to match the one we just set up. For this example, let\'s say that when we created our custom app listening on port, it gave us a port number of 57664 for the node app:',
    '<code>var http = require(\'http\');\nhttp.createServer(function (req, res) {\nres.writeHead(200, {\'Content-Type\': \'text/plain\'});\nres.end(\'Hello World\\n\');\n}).listen(57664, "127.0.0.1");\nconsole.log(\'Server running at http://127.0.0.1:57664/\');</code>',
  '</p>',
  '<p>',
    'Before we can see this, we need to add a site to point to our custom app. So, substituting YOURDOMAIN.COM for whatever your domain is, do the following:',
  '</p>',
  '<p>',
   'From <a href="http://panel.webfaction.com">your control panel at Webfaction</a>, click on <em>Domains / websites</em> and then choose <em>Websites</em>. Add a new site and name it <em>nodejs</em> or something else that will remind you what this is for.',
  '</p>',
  '<p>',
    'For <em>Subdomains</em> choose YOURDOMAIN.COM and then add your node app under <em>Site apps</em>.',
  '</p>',
  '<p>',
    'Pretty straightforward, right? Finally, let\'s take care of CouchDB. We can access the admin via an awesome web interface provided called Futon, so let\'s make sure we have a site set up to provide us that access. I like to use a subdomain of an existing domain, so for this example let\'s just say you have a domain enabled on your Webfaction account called relax.com',
  '</p>',
  '<p>',
    'From <a href="http://panel.webfaction.com">your control panel at Webfaction</a>, click on <em>Domains / websites</em> and choose <em>Domains</em>', 
    'Next to <em>relax.com</em> (or your actual site you plan to use) click Edit and add a new subdomain, <em>c</em>. You should now have a subdomain <em>c.relax.com</em>',
  '</p>',
  '<p>',
   'Next, again click on <em>Domains / websites</em> and then choose <em>Websites</em>. Add a new site and name it <em>couchdb</em> or something else that will remind you what this is for.',
  '</p>',
  '<p>',
    'For <em>Subdomains</em> choose your c.relax.com subdomain you just created (or whatever you chose to call it) and then add your CouchDB app under <em>Site apps</em>.',
  '</p>',
  '<p>',
    'You will now be able to access the Futon interface via <em>c.relax.com/_utils/</em>. Remember that port number you wrote down, because any future interactions between node and CouchDB that you set up will need to know it!',
  '</p>',
  '<p>',
    'When you run any of your node scripts, you\'ll want them to stay running in the background after you log out - so do this:',
    '<code>nohup node YOURSCRIPT.js &</code>',
    'The ampersand at the end there causes it to run in the background. If you want to stop your script, you\'ll need to kill the process. To do that:',
    '<code>ps -f -uYOURWEBFACTIONUSERNAME | grep YOURSCRIPT.js | grep -v grep | cut -c11-15 | xargs kill 0</code>',
  '</p>',
  '<p>',
    'And that\'s it! Happy node-ing. If you have any questions, queries or comments, <a href="http://twitter.com/shakefon">@shakefon on twitter</a>. Credit for the Dependency installation to <a href="http://forum.webfaction.com/viewtopic.php?id=2355">SeanF in the webfaction forum</a>',
  '</p>',
  '<p>',
    'Created: Nov 19th 2010<br/>Last modified: Nov 21st 2010',
  '</p>',
  '<p>',
    '<a href="/">&laquo; home</a>',
  '</p>'
].join('');